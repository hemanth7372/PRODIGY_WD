<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic Tac Toe</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: Arial, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background: linear-gradient(135deg, #4e54c8, #8f94fb);
      color: #fff;
    }

    .game-container {
      text-align: center;
    }

    h1 {
      margin-bottom: 20px;
    }

    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
      justify-content: center;
      margin: 20px auto;
    }

    .cell {
      width: 100px;
      height: 100px;
      background: rgba(255, 255, 255, 0.2);
      border-radius: 10px;
      display: flex;
      justify-content: center;
      align-items: center;
      font-size: 2.5rem;
      cursor: pointer;
      transition: background 0.3s;
    }

    .cell:hover {
      background: rgba(255, 255, 255, 0.4);
    }

    .winner {
      font-size: 1.5rem;
      margin: 15px 0;
    }

    button {
      padding: 10px 20px;
      font-size: 1rem;
      border: none;
      border-radius: 8px;
      cursor: pointer;
      background: #ff9800;
      color: white;
      transition: 0.3s;
    }

    button:hover {
      opacity: 0.8;
    }
  </style>
</head>
<body>
  <div class="game-container">
    <h1>Tic-Tac-Toe</h1>
    <div class="board" id="board"></div>
    <div class="winner" id="winner"></div>
    <button onclick="resetGame()">Restart Game</button>
  </div>

  <script>
    const board = document.getElementById("board");
    const winnerText = document.getElementById("winner");

    let currentPlayer = "X";
    let gameActive = true;
    let gameState = ["", "", "", "", "", "", "", "", ""];

    const winningConditions = [
      [0, 1, 2],
      [3, 4, 5],
      [6, 7, 8],
      [0, 3, 6],
      [1, 4, 7],
      [2, 5, 8],
      [0, 4, 8],
      [2, 4, 6]
    ];

    function createBoard() {
      board.innerHTML = "";
      gameState.forEach((cell, index) => {
        const div = document.createElement("div");
        div.classList.add("cell");
        div.dataset.index = index;
        div.innerText = cell;
        div.addEventListener("click", handleClick);
        board.appendChild(div);
      });
    }

    function handleClick(e) {
      const index = e.target.dataset.index;

      if (gameState[index] !== "" || !gameActive) return;

      gameState[index] = currentPlayer;
      e.target.innerText = currentPlayer;

      if (checkWinner()) {
        winnerText.innerText = `ðŸŽ‰ Player ${currentPlayer} Wins!`;
        gameActive = false;
        return;
      }

      if (!gameState.includes("")) {
        winnerText.innerText = "It's a Draw!";
        gameActive = false;
        return;
      }

      currentPlayer = currentPlayer === "X" ? "O" : "X";
    }

    function checkWinner() {
      return winningConditions.some(condition => {
        return condition.every(index => gameState[index] === currentPlayer);
      });
    }

    function resetGame() {
      currentPlayer = "X";
      gameActive = true;
      gameState = ["", "", "", "", "", "", "", "", ""];
      winnerText.innerText = "";
      createBoard();
    }

    createBoard();
  </script>
</body>
</html>
